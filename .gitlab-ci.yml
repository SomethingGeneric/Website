image: node:18-bookworm

stages:          # List of stages for jobs, and their order of execution
  - build
  - deploy

variables: # goofy thing where you have to manually inherit secrets/variables from the UI
  SSH_KEY: $SECRET_SSH_KEY
  SSH_HOST: "www.xhec.dev"
  SSH_USER: "root"
  DEPLOY_PATH: "/var/www/xhecdev/"
  GLAB_TOKEN: $GLAB_TOKEN

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  artifacts:
    paths: 
        - build/
  script:
    - echo "Running build"
    - make build
    - echo "Build complete."

deploy-job:
  stage: deploy
  only:
    - main
  inherit:
    variables: true
  before_script:
    - mkdir -p ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - cp $SECRET_SSH_KEY ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
  script:
    - echo "Installing rsync"
    - apt update && apt install rsync -y
    - echo "Pushing to $SSH_HOST at $DEPLOY_PATH"
    - rsync -avc build/* $SSH_USER@$SSH_HOST:$DEPLOY_PATH/.

create_merge_request:
  stage: deploy
  before_script:
    - apt-get update && apt-get install sudo -y
    - curl -s https://raw.githubusercontent.com/profclems/glab/trunk/scripts/install.sh | sudo bash
    - glab auth login -h "https://gitlab.mattcompton.dev" -t "$GLAB_TOKEN"
  script:
    - |
      if git diff --quiet main...HEAD; then
        echo "No changes relative to main branch. Skipping merge request creation."
      else
        echo "Changes detected. Creating merge request."
        glab mr create -s experiment -t main -t "Automatic merge request from CI" -d "This merge request was automatically created by the CI pipeline because changes were detected relative to the main branch."
      fi
  only:
    - experiment
